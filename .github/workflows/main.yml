name: Prisha's Precious Projectiles CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Check manifest
        id:   check-manifest
        run:  python ./.github/workflows/check-manifest.py
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Build module
        run: npm run build
      - name: Show dist contents
        run: |
          echo "Contents of dist directory:"
          ls -la dist/
          echo "Contents of dist/packs:"
          ls -la dist/packs/
      - name: Get version
        id:   get-version
        run: |
          if [ "${{ github.event_name }}" = "push" ] && [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "VERSION=$(python ./.github/workflows/get-version.py)" >> $GITHUB_OUTPUT
            echo "Using version from module.json for main branch push"
          else
            echo "VERSION=${{ github.sha }}" >> $GITHUB_OUTPUT
            echo "Using commit SHA for PR or non-main branch: ${{ github.sha }}"
          fi
          echo "Version: ${{ steps.get-version.outputs.VERSION }}"
      - name: Zip files
        id:   zip-files
        run: |
          cd dist && zip -r ../prishas-precious-projectiles.zip .
      - name: Create release
        id:   create-versioned-release
        if:   github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: false
          name:         Release ${{ steps.get-version.outputs.VERSION }}
          draft:        false
          prerelease:   false
          token:        ${{ secrets.GITHUB_TOKEN }}
          artifacts:    "./module.json,./prishas-precious-projectiles.zip"
          tag:          ${{ steps.get-version.outputs.VERSION }}
